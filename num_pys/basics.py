import numpy as np
import matplotlib
import matplotlib.pyplot as pt

matplotlib.use('TkAgg')

arr1 = np.array([1, 2, 3])
print(arr1, type(arr1))

arr2 = np.arange(100)
print(arr2, type(arr2))

arr3 = np.array([(1, 2), (3, 4), (5, 6)])
print(arr3, type(arr3))
print("Dimensions:", arr3.ndim)
print("Shape:", arr3.shape)
print("Size:", arr3.size)
print("Data type:", arr3.dtype)
print("Item size:", arr3.itemsize)
print("Total bytes:", arr3.nbytes)
print("Line space:", np.linspace(1, 10, 5))
print("Maximum:", arr3.max())
print("Minimum:", arr3.min())
print("Sum:", arr3.sum())
print("Mean:", arr3.mean())
print("Median:", np.median(arr3))
print("Standard Deviation:", arr3.std())
print("Variance:", arr3.var())
print("Index of max:", arr3.argmax())
print("Index of min:", arr3.argmin())
print("Square root:", np.sqrt(arr3))
print("Transpose:", arr3.T)
print("Flatten:", arr3.flatten())

arr4 = arr3.reshape(2, 3)
print("Reshape:", arr4)

array1 = np.array([[1, 2, 3], [4, 5, 6]])
array2 = np.array([[7, 8, 9], [10, 11, 12]])
print("Addition:\n", array1 + array2)
print("Subtraction:\n", array1 - array2)
print("Multiplication:\n", array1 * array2)
print("Division:\n", array1 / array2)
print("Matrix Multiplication:\n", np.dot(array1, array2.T))
print("Element-wise Multiplication:\n", array1 * array2)
print("Element-wise Division:\n", array1 / array2)
print("Exponentiation:\n", array1 ** 2)
print("Sine:\n", np.sin(array1))
print("Cosine:\n", np.cos(array1))
print("Tangent:\n", np.tan(array1))
print("Logarithm:\n", np.log(array1))
print("Exponential:\n", np.exp(array1))
print("Unique elements:", np.unique(arr2))
print("Sort:", np.sort(arr2))
print("Concatenate:", np.concatenate((array1, array2), axis=0))
print("Stack vertically:\n", np.vstack((array1, array2)))
print("Stack horizontally:\n", np.hstack((array1, array2)))
print("Split:\n", np.array_split(arr2, 5))
print("Copy:", arr2.copy())
print("View:", arr2.view())
print("Slicing:", arr2[10:20])
print("Boolean Indexing:", arr2[arr2 > 50])
print("Fancy Indexing:", arr2[[1, 3, 5, 7, 9]])
print("Random array:", np.random.rand(3, 4))
print("Random integers:", np.random.randint(1, 100, size=(3, 4)))
print("Identity matrix:\n", np.eye(3))
print("Diagonal matrix:\n", np.diag([1, 2, 3]))
print("Covariance matrix:\n", np.cov(array1))
print("Correlation matrix:\n", np.corrcoef(array1))
print("Save array to file")
np.save('array.npy', arr3)
print("Load array from file")
loaded_arr = np.load('array.npy')
print(loaded_arr)
print("Array from loaded file:", loaded_arr)

arr5 = np.array([[11, 12, 13, 14], [15, 16, 17, 18], [19, 20, 21, 22]])
print("Original array:\n", arr5)
print("First row of all columns:", arr5[0, :])
print("First column of all rows:", arr5[:, 0])
print("All rows - from 1st to 2nd column\n", arr5[:, 1:3])

rows = 10
cols = 10
mean = 50
std_dev = 10

matrix = np.random.normal(mean, std_dev, (rows, cols))
print("Random matrix with normal distribution:\n", matrix)

x = np.arange(0.4 * np.pi, 0.2)
y = np.sin(x)
pt.plot(x, y)
pt.show()